
// Добавляем 
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>2.2.17</version>
</dependency>

// 
class Manager {
   private static final Logger logger = LoggerFactory.getLogger(Manager.class);

   public boolean processTask(Task task) {
        logger.debug("processTask id = " + task.getId());
        try {
            task.start();
            task.progress();
            task.complete();
            return true;
        } catch (Exception e) {
            logger.error("Unknown error", e);
            return false;
        }
    }
}

// 
DEBUG
INFO
WARN
ERROR
FATAL

// пример
class Manager {
    private static final Logger logger = LoggerFactory.getLogger(Manager.class);

    public boolean processTask(Task task) {
        logger.debug("processTask id = " + task.getId());
        try {
            task.start();
            task.progress();
            task.complete();
            return true;
        } catch (Exception e) {
            logger.error("Unknown error", e);
            return false;
        }
    }
}

// Уровень 	Примечание
1 	ALL 	Писать в лог все сообщения
2 	TRACE 	Мелкое сообщение при отладке
3 	DEBUG 	Сообщения важные при отладке
4 	INFO 	Простые сообщения
5 	WARN 	Писать только fatal, error и warning
6 	ERROR 	Писать только ошибки и фатальные ошибки
7 	FATAL 	Писать только фатальные ошибки
8 	OFF 	Не писать в лог сообщения

//
