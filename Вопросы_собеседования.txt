
1. –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–∏–Ω—Ü–∏–ø SOLID? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –æ–Ω –≤–∫–ª—é—á–∞–µ—Ç.

SOLID ‚Äî —ç—Ç–æ –Ω–∞–±–æ—Ä –∏–∑ 5 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
    S ‚Äì Single Responsibility Principle (–ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏)
    O ‚Äì Open/Closed Principle (–ü—Ä–∏–Ω—Ü–∏–ø –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏/–∑–∞–∫—Ä—ã—Ç–æ—Å—Ç–∏)
    L ‚Äì Liskov Substitution Principle (–ü—Ä–∏–Ω—Ü–∏–ø –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ë–∞—Ä–±–∞—Ä—ã –õ–∏—Å–∫–æ–≤)
    I ‚Äì Interface Segregation Principle (–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
    D ‚Äì Dependency Inversion Principle (–ü—Ä–∏–Ω—Ü–∏–ø –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)

2. –í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É HashMap, TreeMap –∏ LinkedHashMap?

HashMap ‚Äî –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è, –±—ã—Å—Ç—Ä–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∏ –¥–æ—Å—Ç—É–ø –ø–æ –∫–ª—é—á—É, –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫.
LinkedHashMap ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
TreeMap ‚Äî –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ –∫–ª—é—á—É, –º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ—Å—Ç—å (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç Comparable –∏–ª–∏ Comparator).

3. –û–±—ä—è—Å–Ω–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –º–µ—Ç–æ–¥–∞–º–∏ get() –∏ load() –≤ Hibernate.

get() ‚Äî –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.
–ü—Ä–∏–º–µ—Ä: session.get(User.class, 1);
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç.
load() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-–æ–±—ä–µ–∫—Ç, –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –¥–æ—Å—Ç—É–ø–µ –∫ –ø–æ–ª—è–º (–ª–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è). –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ—Ç ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç ObjectNotFoundException.
–ü—Ä–∏–º–µ—Ä: session.load(User.class, 1);
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –æ–±—ä–µ–∫—Ç —Ç–æ—á–Ω–æ –µ—Å—Ç—å, –∏ –º–æ–∂–Ω–æ –æ—Ç–ª–æ–∂–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É.

4. –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Å–∫–∞–¥–∏—Ä–æ–≤–∞–Ω–∏–µ (cascade) –≤ Hibernate –∏ –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ? 

Cascade (–∫–∞—Å–∫–∞–¥–∏—Ä–æ–≤–∞–Ω–∏–µ) –≤ Hibernate ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ (persist, merge, remove –∏ —Ç.–¥.) –∫ —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å—É—â–Ω–æ—Å—Ç—è–º.
–≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö @OneToMany, @ManyToOne, @OneToOne –∏ @ManyToMany, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é —Å—É—â–Ω–æ—Å—Ç—å, –Ω–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ—á–µ—Ä–Ω–∏–µ.
–í–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã –∫–∞—Å–∫–∞–¥–∞:
    PERSIST
    MERGE
    REMOVE
    REFRESH
    DETACH
    ALL ‚Äî –ø—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–µ

5. –ß—Ç–æ —Ç–∞–∫–æ–µ final, –∏ –∫–∞–∫ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏, –º–µ—Ç–æ–¥–∞–º–∏ –∏ –∫–ª–∞—Å—Å–∞–º–∏?

–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ final –≤ Java –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å—É—â–Ω–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:
final –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ‚Äì –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è.
final int x = 10;
x = 20; // –æ—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
final –º–µ—Ç–æ–¥ ‚Äì –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö.
class A {
    final void show() {}
}
class B extends A {
    void show() {} // –æ—à–∏–±–∫–∞
}
final –∫–ª–∞—Å—Å ‚Äì –Ω–µ–ª—å–∑—è —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –Ω–µ–≥–æ.
final class A {}
class B extends A {} // –æ—à–∏–±–∫–∞

6. –í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É ArrayList –∏ LinkedList? –ö–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é –∏–∑ –Ω–∏—Ö?

–û–±–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å List, –Ω–æ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
    ArrayList –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –º–∞—Å—Å–∏–≤–µ:
        –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –ø–æ –∏–Ω–¥–µ–∫—Å—É (O(1))
        –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–∫–∏/—É–¥–∞–ª–µ–Ω–∏—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –∏–ª–∏ –Ω–∞—á–∞–ª–µ (O(n))
        –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —á–∞—Å—Ç–æ–≥–æ —á—Ç–µ–Ω–∏—è
    LinkedList –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –¥–≤—É—Å–≤—è–∑–Ω–æ–º —Å–ø–∏—Å–∫–µ:
        –ú–µ–¥–ª–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø–æ –∏–Ω–¥–µ–∫—Å—É (O(n))
        –ë—ã—Å—Ç—Ä—ã–µ –≤—Å—Ç–∞–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è —Å –Ω–∞—á–∞–ª–∞/—Å–µ—Ä–µ–¥–∏–Ω—ã (O(1) –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å—Å—ã–ª–∫–∏)
        –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —á–∞—Å—Ç—ã—Ö –≤—Å—Ç–∞–≤–æ–∫/—É–¥–∞–ª–µ–Ω–∏–π
–ü—Ä–∏–º–µ—Ä—ã:
List<String> list1 = new ArrayList<>();
List<String> list2 = new LinkedList<>();
–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    ArrayList ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω—ã —á–∞—Å—Ç—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
    LinkedList ‚Äî –µ—Å–ª–∏ –≤–∞–∂–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å—Ç–∞–≤–æ–∫/—É–¥–∞–ª–µ–Ω–∏–π

7. –í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É HashMap –∏ TreeMap? –ö–æ–≥–¥–∞ –∏ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?

HashMap:
    –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ö–µ—à-—Ç–∞–±–ª–∏—Ü–µ
    –ù–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    –û–ø–µ—Ä–∞—Ü–∏–∏ –≤—Å—Ç–∞–≤–∫–∏, —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø–æ–∏—Å–∫–∞ ‚Äî –≤ —Å—Ä–µ–¥–Ω–µ–º O(1)
    –ö–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å hashCode() –∏ equals()
TreeMap:
    –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∫—Ä–∞—Å–Ω–æ-—á—ë—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ (self-balancing binary search tree)
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∫–ª—é—á–µ–π
    –û–ø–µ—Ä–∞—Ü–∏–∏ ‚Äî O(log n)
    –ö–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å Comparable –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è —Å Comparator
–ü—Ä–∏–º–µ—Ä:
Map<String, String> hashMap = new HashMap<>();
Map<String, String> treeMap = new TreeMap<>();
hashMap.put("b", "banana");
hashMap.put("a", "apple");
treeMap.put("b", "banana");
treeMap.put("a", "apple");
System.out.println(hashMap); // –ü–æ—Ä—è–¥–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π
System.out.println(treeMap); // {a=apple, b=banana}
üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    HashMap ‚Äî –µ—Å–ª–∏ –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –≤–∞–∂–µ–Ω –∏ –Ω—É–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    TreeMap ‚Äî –µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∫–ª—é—á–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

8. –ß—Ç–æ —Ç–∞–∫–æ–µ Stream?

Stream API –≤ Java ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ (–∏ –Ω–µ —Ç–æ–ª—å–∫–æ), –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —É–¥–æ–±–Ω–æ, –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.
Stream ‚Äî —ç—Ç–æ –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π:
    –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ —Å–∞–º (—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–≤–µ—Ä—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞),
    –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ (pipeline),
    –º–æ–∂–µ—Ç –±—ã—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º (lazy evaluation).
–ì–¥–µ —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç:
    –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
    –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ (groupingBy)
    –ü–æ–¥—Å—á—ë—Ç/–∞–≥—Ä–µ–≥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
    –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON/CSV/–∫–æ–ª–ª–µ–∫—Ü–∏–π
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö (—Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ)

9. –ß—Ç–æ —Ç–∞–∫–æ–µ TDD ?

TDD (Test-Driven Development) ‚Äî —ç—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å–Ω–∞—á–∞–ª–∞ –ø–∏—à—É—Ç —Ç–µ—Å—Ç—ã, –∞ —É–∂–µ –ø–æ—Ç–æ–º ‚Äî —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–æ–¥–∞.
–°—É—Ç—å TDD:
TDD —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Ü–∏–∫–ª–µ –∏–∑ —Ç—Ä—ë—Ö —à–∞–≥–æ–≤:
    Red ‚Äì –ù–∞–ø–∏—à–∏ —Ç–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–∞–ª–∏—Ç—Å—è
    (—Ç–µ—Å—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â—ë –Ω–µ—Ç)
    Green ‚Äì –ù–∞–ø–∏—à–∏ –º–∏–Ω–∏–º—É–º –∫–æ–¥–∞, —á—Ç–æ–±—ã —Ç–µ—Å—Ç –ø—Ä–æ—à—ë–ª
    Refactor ‚Äì –£–ª—É—á—à–∞–π –∫–æ–¥, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
    –ü–æ–≤—Ç–æ—Ä—è–π —Ü–∏–∫–ª.
–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ TDD:
    –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –∫–æ–¥
    –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –±–∞–≥–æ–≤
    –ö–æ–¥ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω —Ç–µ—Å—Ç–∞–º–∏
    –ü–æ–≤—ã—à–∞–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ
–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
    –¢—Ä–µ–±—É–µ—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
    –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ –¥–æ–ª—å—à–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ/–Ω–µ—è—Å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å:
    JUnit, TestNG (Java)
    Mockito ‚Äî –¥–ª—è –º–æ–∫–æ–≤
    Spring Boot + TDD ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞—Ö

10. –ß—Ç–æ —Ç–∞–∫–æ–µ hashCode() –∏ equals()? –ü–æ—á–µ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –æ–±–∞?

–ú–µ—Ç–æ–¥—ã hashCode() –∏ equals() –≤ Java ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –≤ –∫–ª–∞—Å—Å–µ java.lang.Object, –∏ –æ–Ω–∏ –∏–≥—Ä–∞—é—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏, –æ—Å–æ–±–µ–Ω–Ω–æ —Å —Ç–∞–∫–∏–º–∏ –∫–∞–∫ HashMap, HashSet, Hashtable.
–ß—Ç–æ —Ç–∞–∫–æ–µ equals()?
–ú–µ—Ç–æ–¥ equals(Object obj) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã –ª–∏ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–Ω —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏ (—Ç–æ –µ—Å—Ç—å this == obj).
–ß—Ç–æ —Ç–∞–∫–æ–µ hashCode()?
–ú–µ—Ç–æ–¥ hashCode() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ö–µ—à-–∫–æ–¥ –æ–±—ä–µ–∫—Ç–∞. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–∞ –≤ HashMap, HashSet.
–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ:
–ò—Å–ø–æ–ª—å–∑—É–π @Override equals() –∏ hashCode() –≤—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ, –∏ –ø–æ –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ –ø–æ–ª—è–º.

11. –ß—Ç–æ —Ç–∞–∫–æ–µ autoboxing –∏ unboxing?

Autoboxing –∏ unboxing ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–µ–∂–¥—É –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ (int, double, boolean, –∏ —Ç. –¥.) –∏ –∏—Ö –æ–±—ë—Ä—Ç–∫–∞–º–∏ (Integer, Double, Boolean, –∏ —Ç. –¥.) –≤ Java.
Autoboxing ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø–∞–∫–æ–≤—ã–≤–∞–Ω–∏–µ
–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç-–æ–±—ë—Ä—Ç–∫—É. // autoboxing: int -> Integer
Unboxing ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–Ω–∏–µ
–≠—Ç–æ –æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞-–æ–±—ë—Ä—Ç–∫–∏ –≤ –ø—Ä–∏–º–∏—Ç–∏–≤. // unboxing: Integer -> int
–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å:
    Autoboxing/unboxing ‚Äî –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã. –û–Ω–∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∞—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è, —á—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
    NullPointerException –≤–æ–∑–º–æ–∂–µ–Ω!

12. –ß—Ç–æ —Ç–∞–∫–æ–µ lambda?

–õ—è–º–±–¥–∞-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ (lambda expression) –≤ Java ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–ø–æ—Å–æ–± –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –û–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Å–æ–±–µ–Ω–Ω–æ —É–¥–æ–±–Ω–æ —Å Stream API, –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏.
–°–∏–Ω—Ç–∞–∫—Å–∏—Å:
    (parameters) -> { —Ç–µ–ª–æ }
    // –ü—Ä–∏–º–µ—Ä 1: –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    () -> System.out.println("Hello");
    // –ü—Ä–∏–º–µ—Ä 2: –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä
    x -> x * 2
    // –ü—Ä–∏–º–µ—Ä 3: –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    (a, b) -> a + b
–ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
–í –æ—Å–Ω–æ–≤–Ω–æ–º ‚Äî —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏: –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏ —Å –æ–¥–Ω–∏–º –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º –º–µ—Ç–æ–¥–æ–º.
–ü—Ä–∏–º–µ—Ä—ã —Ç–∞–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:
    Runnable
    Comparator<T>
    Consumer<T>
    Function<T, R>
    Predicate<T>
–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –æ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∫ –ª—è–º–±–¥–µ
// –î–æ Java 8 ‚Äî –∞–Ω–æ–Ω–∏–º–Ω—ã–π –∫–ª–∞—Å—Å
new Thread(new Runnable() {
    @Override
    public void run() {
        System.out.println("–ü—Ä–∏–≤–µ—Ç!");
    }
}).start();
// –° Java 8 ‚Äî –ª—è–º–±–¥–∞
new Thread(() -> System.out.println("–ü—Ä–∏–≤–µ—Ç!")).start();

13. –ß—Ç–æ –¥–µ–ª–∞–µ—Ç @Transactional?

–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è @Transactional –≤ Java (–æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å Spring Framework) —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –º–µ—Ç–æ–¥ –∏–ª–∏ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –º–µ—Ç–æ–¥–∞ –±—É–¥—É—Ç —á–∞—Å—Ç—å—é –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç @Transactional?
    –ù–∞—á–∏–Ω–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞.
    –ï—Å–ª–∏ –º–µ—Ç–æ–¥ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ ‚Äî —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è (commit).
    –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è (rollback).
    –ú–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å:
        —É—Ä–æ–≤–Ω–µ–º –∏–∑–æ–ª—è—Ü–∏–∏,
        –æ—Ç–∫–∞—Ç–æ–º –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º,
        –≤—Ä–µ–º–µ–Ω–µ–º –æ–∂–∏–¥–∞–Ω–∏—è –∏ –¥—Ä.
–ü—Ä–∏–º–µ—Ä:
@Service
public class UserService {
    @Transactional
    public void registerUser(User user) {
        userRepository.save(user);
        emailService.sendWelcomeEmail(user); // –ï—Å–ª–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, save() –æ—Ç–∫–∞—Ç–∏—Ç—Å—è
    }
}
–ï—Å–ª–∏ sendWelcomeEmail() –≤—ã–±—Ä–æ—Å–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî user –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ë–î, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∏—Ç—Å—è.
    –ì–¥–µ –º–æ–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å?
    –ù–∞ –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ ‚Äî —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥.
    –ù–∞ –≤–µ—Å—å –∫–ª–∞—Å—Å ‚Äî –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ –≤—Å–µ–º –º–µ—Ç–æ–¥–∞–º.
–í–∞–∂–Ω–æ:
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å public-–º–µ—Ç–æ–¥–∞–º–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ Spring-–∫–æ–Ω—Ç–µ–∫—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ @Autowired).
    –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –≤—ã–∑–æ–≤–∞—Ö this.someTransactionalMethod().
    –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DataSource –∏ PlatformTransactionManager –≤ Spring-–∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.

14. –ß—Ç–æ —Ç–∞–∫–æ–µ REST –∏ RESTful API?

REST (Representational State Transfer) ‚Äî —ç—Ç–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –æ—Å–æ–±–µ–Ω–Ω–æ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤. –û–Ω –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–µ –∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞-—Å–µ—Ä–≤–µ—Ä–∞.
RESTful API ‚Äî —ç—Ç–æ API (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è), –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã REST.
–ü—Ä–∏–º–µ—Ä RESTful API:
GET /books         ‚Üí –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥  
GET /books/10      ‚Üí –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É —Å ID 10  
POST /books        ‚Üí —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É  
PUT /books/10      ‚Üí –æ–±–Ω–æ–≤–∏—Ç—å –∫–Ω–∏–≥—É —Å ID 10  
DELETE /books/10   ‚Üí —É–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É —Å ID 10
–ß—Ç–æ –æ—Ç–ª–∏—á–∞–µ—Ç RESTful API –æ—Ç –ø—Ä–æ—Å—Ç–æ API?
    RESTful API —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º REST.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTTP-–º–µ—Ç–æ–¥—ã.
    –ò–º–µ–µ—Ç —á–∏—Ç–∞–µ–º—ã–µ, –ª–æ–≥–∏—á–Ω—ã–µ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ URL.
    –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Å—Å–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (stateless).
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç JSON –∏–ª–∏ XML –∫–∞–∫ —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö (—á–∞—â–µ ‚Äî JSON).

15. –ß—Ç–æ —Ç–∞–∫–æ–µ CORS?

CORS (Cross-Origin Resource Sharing) ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–∞—Ö, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∏–ª–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ —Ä–µ—Å—É—Ä—Å–∞–º —Å –¥—Ä—É–≥–æ–≥–æ –¥–æ–º–µ–Ω–∞ (–ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è).
–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –±–µ–∑ CORS?
–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—Ä–∞—É–∑–µ—Ä—ã –∑–∞–ø—Ä–µ—â–∞—é—Ç –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å AJAX-–∑–∞–ø—Ä–æ—Å—ã (fetch, XMLHttpRequest) –Ω–∞ –¥—Ä—É–≥–æ–π –¥–æ–º–µ–Ω, –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç —Ç–æ–≥–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞. –≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (Same-Origin Policy).
–ó–∞—á–µ–º –Ω—É–∂–µ–Ω CORS?
–ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Å–∞–π—Ç —Å –¥–æ–º–µ–Ω–∞ A –º–æ–≥ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ API –∏–ª–∏ —Ä–µ—Å—É—Ä—Å–∞–º –Ω–∞ –¥–æ–º–µ–Ω–µ B. –î–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä –¥–æ–º–µ–Ω–∞ B –¥–æ–ª–∂–µ–Ω —è–≤–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Ç–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã.
–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç CORS?
    –ë—Ä–∞—É–∑–µ—Ä –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –¥—Ä—É–≥–æ–º—É –¥–æ–º–µ–Ω—É –ø–æ—Å—ã–ª–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π HTTP-–∑–∞–≥–æ–ª–æ–≤–æ–∫ Origin, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑—ã–≤–∞–µ—Ç, —Å –∫–∞–∫–æ–≥–æ —Å–∞–π—Ç–∞ –ø—Ä–∏—à—ë–ª –∑–∞–ø—Ä–æ—Å.
    –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–º Access-Control-Allow-Origin, –∫–æ—Ç–æ—Ä—ã–π –ª–∏–±–æ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞, –ª–∏–±–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç.
    –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑—Ä–µ—à–∞—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –±—Ä–∞—É–∑–µ—Ä —Ä–∞–∑—Ä–µ—à–∏—Ç –¥–æ—Å—Ç—É–ø JavaScript –∫ –¥–∞–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–∞.
    –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –±—Ä–∞—É–∑–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç, –∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ JS.
