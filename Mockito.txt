
@ExtendWith(MockitoExtension.class)
public class MockitoAnnotationTest {

    // Первый способ – это создать полностью виртуальный объект
    // ИмяКласса имяПеременной = Mockito.mock(ИмяКласса.class); 
    MyClass myClass = Mockito.mock(MyClass.class);

    // Второй способ – это обертки над существующими объектами 
    // ИмяКласса имяПеременной = Mockito.spy(объект); 
    
}

// 1-й способ 
@ExtendWith(MockitoExtension.class)
class MockTest {
    @Test
    public void whenNotUseMockAnnotation_thenCorrect() {
        List mockList = Mockito.mock(ArrayList.class);
        //эти методы не будут ничего делать – это заглушки
        mockList.add("one");
        mockList.add("two");
    }
}

// короткая запись кода 
@ExtendWith(MockitoExtension.class)
class MockTest {
    @Mock
    List mockList;

    @Test
    public void whenNotUseMockAnnotation_thenCorrect() {
        //эти методы не будут ничего делать – это заглушки
        mockList.add("one");
        mockList.add("two");
    }
}

// 2-й способ - пример 
@ExtendWith(MockitoExtension.class)
class SpyTest {
    @Test
    public void whenMockAnnotation() {
        List<String> mockList = Mockito.spy(new ArrayList<String>());
        //эти методы будут работать!
        mockList.add("one");
        mockList.add("two");
    }
}

// или 
@ExtendWith(MockitoExtension.class)
class SpyTest {
    @Spy
    List mockList = new ArrayList<String>();

    @Test
    public void whenMockAnnotation() {
        // эти методы будут работать!
        mockList.add("one");
        mockList.add("two");
    }
}


//
